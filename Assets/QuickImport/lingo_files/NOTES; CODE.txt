-- general
repeat with q = 1 to 
repeat with c = 1 to
both appear to be nested for loops?
uses images for displaying?
blits a "resized" 1x1 pixel to the image at a rect, and slopes just fuck with the corners?
editor viewport image is 832 x 640 (scaled by 2.5 on a 4K screen)
editor window keeps height (height is 1920)
are globals case insensitive?
are rects quads/polygons?
final image (each camera) is 1400 x 800
is each square 20 x 20 pixels? // no they're 16 x 16
bars appear to be 4 x 16?
lol the floors are 8x16






---startUp
this seems to set the base properties for each of the editor's thingies
first thing activated(?)
	gLEVEL = [#timeLimit:4800, #defaultTerrain:1, #maxFlies:10, #flySpawnRate:50, #lizards:[], #ambientSounds:[], #music:"NONE", #tags:[], #lightType:"Static", #waterDrips:1, #lightRect:rect(0,0,1040,800), #matrix:[]]
	solidMtrx = [](??)
	gLEProps = [#matrix:[] , #levelEditors:[] , #toolMatrix:[],#camPos:point(0,0)]
	fills the matrix with squares on layers 1 and 2
	gTEprops = [#lastKeys:[], #keys:[], #workLayer:1, #lstMsPs:point(0,0), #tlMatrix:[], #defaultMaterial:"Concrete", #toolType:"material", #toolData:"Big Metal",\
	tmPos:point(1,1), #tmSavPosL:[], #specialEdit:0]
	(what does \ do?)
	tlmatrix is empty on startup
	gTiles is the list of tiles
	it imports the extra tiles in Graphics\init.txt
	all the props are stored in the Props\init.txt file
	gProps.add( [#nm:vl[1], #clr:vl[2], #prps:[]]    )
	also does the tiles as props
	the prop count per page appears to max at 21
	wow it doesn't use anything complicated it just compares a string
	gEEprops = [#lastKeys:[], #keys:[], #lstMsPs:point(0,0), #effects:[], emPos:point(1,1), #editEffect:0, #selectEditEffect:0, #mode:"createNew", #brushSize:5]
	gLightEProps = [#pos:point(1040/2, 800/2), rot:0, #sz:point(50, 70), #col:1, #keys:0, #lastKeys:0, #lastTm:0, #lightAngle:180, #flatness:1, #lightRect:rect(1000, 1000, -1000, -1000), #paintShape:"pxl"]
	gLOprops = [#mouse:0, #lastMouse:0, #mouseClick:0, #pal:1, pals:[[#detCol:color(255, 0, 0)]], #eCol1:1, #eCol2:2, #totEcols:5, #tileSeed:random(400), #colGlows:[0,0], #size:point(cols, rows), #extraTiles:[12,3,12,5], #light:1]
	gCameraProps = [#cameras:[point(gLOprops.size.locH*10, gLOprops.size.locV*10)-point(35*20, 20*20)], #selectedCamera:0, #quads:[[[0,0], [0,0], [0,0], [0,0]]], #keys:[#n:0, #d:0, #e:0, #p:0], #lastKeys:[#n:0, #d:0, #e:0, #p:0]]
	gSEProps = [#sounds:void, #ambientSounds:[], #songs:[], #rects:[], #pickedUpSound:"NONE"] (deprecated?)
	the light image is the gLOprops.size*20 + 300 horiz and vertical with a depth of 1

-- spelrelaterat (translated: game related)
full of (static?) utility methods
on giveGridPos
	converts two pos's into a point, by taking the pos.loc, making it into a float dividing it by 20, adding 0.4999, and making that into an int
on giveMiddleOfTile
	returns a point that is pos.loch/v*20 - 10


--fiffigt (translated: clever/handy)
on diag (comment: this script calculates the distance between two points)


sz  = gLOprops.size*20
lightangle = degToVec(gLightEProps.lightAngle) * gLightEProps.flatness






---levelEditStart
has 3 images (probably the layers)
they are 52*16 / 40*16 / 16 scale
then a lvleditdraw (method? class?) draws a rect of them like (rect(1, 1, cols, rows) <layer>)
there is also a "shortcuts image" that gets drawn to (maybe it's first in line? as in closest to "camera")

-- levelEditor
seems to be the script that controls the "main" view?
controls the "gLEProps.campos"
draws the level rect from 1,1 to gLOprops.size.loch, gLOprops.size.locv for each layer


-- lvl
this must be the thingamajig that controls the displays
LevelEditImageShortCuts is the image that the stackables get written to
on drawShortCutsImg
	if the stackable square contains a shortcut then
	if it's within the gLOprops rect matrix
	(math)
	l.add(dir)
	then if there are no tiles(?) in the matrix of q+dir.loch, c+dir.locv
	l2.add(dir)
	shrtcut = 0??
	but if l.count = 1 and l.count = 1 and l[1] = - l2[1] then shortcut = 1
	but also if gleprops' matrix q+dir.loch c+dir.locv not equals(?) 1 then shortcut 0?
	then it changes the tile to 7 (shortcut entrance) and blits a directional arrow to the tile's position
	else it changes it to 0 (air)
	
	then it just blits images on each tile for each stackable in the rect matrix
	(does it do this every frame??)
	
here's where lvlEditDraw is
	it takes in a "drwrect", "layer", "drawAll"
	tiles look like 16 x 16?
	drawQ vs drawq?
	drawC vs drawc?
	squares are quads, like in 3D? or are they images? (they're rects, until they are needed to be triangles, then they're "quads")
minilvleditdraw (line 237)
	
	



--levelEdit_parentscript
this is most likely the brains for the geo editor
property "p" -- unknown, probably player/cursor
paint wall/air/floor checks if the mouse is inside the rect of the screen when changing tile
find out what currTool is // it's the selected tool
find out what case does // it's a concise version of if else
find out what p.input is
find out what changeTo does!! // it changes the geometry in the rect to air/wall/floor
	copyback uses lvleditdraw
	q is x
	c is y
	it changes the matrix directly
	gLEProps.matrix[q][c][p.workLayer][1] = changeTo
	is probably the same as matrix[x, y, layer].TileID = changeTo;
	flip is probably the clear all tool
what is affectRect? (= p.workpos, p.rectpos?) (but only if currtool's position > 0?)

find out where changeTo is!! // it's in the script (line 342) (and line 405 for mirroring)
the screen rect starts at 176, 16 and ends at 1008, 656 (832 x 640)
me = lingo's version of c#'s this?

p.input.loch/v is the position?
workPose is the selected tile(s)?
addRemoveFeature toggles each stackable?
on slopetile (what's ps?) (is ps the position argument?)
	nbs = numbers? (is it a string?)
	what is afamvlvledit?
	1001 = 2, 0011 = 3, 1100 = 4, 0110 = 5, and anything else = 0
	and if rslt = 0 then doesn't do shit
	else it gLEProps.matrix[ps.loch][ps.locv][p.workLayer][1] = rslt
on addremovefeature (what's ft?) (is ft an argument?)
	ps = workpos?
	if the matrix doesn't have ft at a position, then it adds it, else it deletes it.
	lvleditdraw/drawshortcutsimg only draws what's inside a rect?
